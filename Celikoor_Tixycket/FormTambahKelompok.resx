<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAABAZQQArN+RAcL6/wDA9vgAoc5jAYe3WwCPx/4Aj8f+AIe3WwCiz2MBwPb3AMX+/wC1
        6dcAlb8jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAEJnBAGq3ZEAwPj/Ab70+AChzmMAf7BcAIK6/wCBuv8Afq9cAKHOZAG9
        9PoAwvv/ALPn2QCVvyMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIaoAACM
        rwAAibMAAJC8AACSvgAAkr0AAJG+AACQvQAAKE4DAKXYkQC48P8Btu75AJ7NbQB5pUAAeq2oAHqtqAB6
        pz8Al8FEAKbWpQCp26kAoM6RAI+4FwCSvgAAkr0AAJK9AACSvgAAkr4AAJG9AACOuAAAhq8AAAAAAAB7
        hgAAouAAAH6YBwCJsh8Akbw8AJO+QwCTvkMAkb5DAJG+QwCCqSUAn9COALDo/wCw6f4AodO0AJC8TQCQ
        u0kAkbtJAJC9RgCRvUYAkLtJAI+7SQCRvEgAk75EAJO+QwCTvkMAk75DAJO+QwCSvkMAkr5BAI63JwB3
        lgQAhaoAAGE+AQCOuDIAmMmVAJ/U0QCj2egApNrrAKTa6wCk2+sAo9nrAJnKlgGUwm0Bp932AKrj/wCo
        3/sBpNvsAKPa6gCk2usApNrqAKTa6gCk2uoApNvqAKTa6gCk2usApNrqAKTa6wCk2usApNrrAaTa6wGk
        2uoBoNXWAJXEbACEpwgAibUwAZfLwwCg2P4Aotv/AaLb/wCi2/8Aodv/AKLb/wCi2/8AnNHkAIq1VACY
        y6oAoNj7AKLa/wCi2/8Aotv/AaLb/wCi2/8Aotv/AKLb/wCi2/8Aotv/AKLb/wCi2/8Botv/AKLb/wGi
        2/8Aotv/AaPc/wGi2/8Bm9HiAI25SQCNvXcAl9D7AJrU/wCXzukBlcm8AZXJtwCVybgAlcm4AJXJuACU
        xrYAirVZAIayIgCRwoUAlMi1AJXIuACVybgBlcm4AZXJuACVybgAlci4AJXIuACVybgAlcm4AJXJuACV
        ybgBlcm4AJXJuACUyLkAlszhAJrT/wGY0P0Aj8CDAIq8jACQyf8Aksv+AIu9qQCAqC0AgagpAIGnKgCB
        qCoAgagqAIKoKgCCqSQAgKYWAH6jHQCAqCgAgagqAIGoKgCBqCoAgagqAIGoKgCBqCoAgagqAIGnKgCB
        pyoAgagqAIGoKgCBpyoAgagpAIGpLQCJup0Akcr9AZHJ/wCKvI0AhLV3AIjB+ACKxP8Ah77nAIa6vwCG
        u8AAhrrAAIW6vwCFu78BhbrAAIa6wACGusEBhrvAAIa7wAGGu78AhrvAAIW7wACFu78AhrvAAIW7vwCG
        u8AAhbrAAYW6vwCGu78Ahru/AIa7vwCGu78AhrvEAYe/6gCJxP8BiML/AYW3jAB/qzQAgbfVAIK8/wCC
        vf8Agrz/AIK8/wCCvP8Bgrz/AIK8/wCCvP8Agrz/AIK8/wGCvP8Agrz/AIG8/wCCvP8Agrz/AYK9/wCC
        vP8Agrz/AIK8/wCCvP8Bgrz/AIG9/wCBvP8Agbz/AIK8/wCCvP8Agr3/AIG9/wCBufMBgLBoAHygBAF9
        rF0Be7HYAXu0+QB6s/8BerT/AHqz/wF6tP8AerP/AHm0/wB6s/8AerT/AHqz/wB6s/8AerP/AXq0/wB6
        s/8BerT/AHqz/wB6s/8AerP/AHqz/wF6s/8AebT/AHqz/wB6s/8BerT/AHq0/wB6tPYAfLLfAH2vhgB+
        pxUAfaMAAYCWAwB6pjkBeat4AHirjgF4q44AeKuOAHirjgB4qo4Bd6uOAHirjgB4q44AeKuOAHirjgB4
        q44BeKuOAXirjgB4q44Ad6qOAHeqjgF3q44BeKuOAHirjgB4q44BeKuOAHirjgB4q44AeKuKAXmrbwB8
        qDoAe6cKAH2sAP/wD///4AP//8AD///AAf//gAH//4AB//+AAf//gAH//4AB//+AAf//gAH//4AB//+A
        Af//gAH//4AB//+AAf//gAH//4AB//+AAf//gAH//4AB//+AAf/AAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAAE=
</value>
  </data>
</root>